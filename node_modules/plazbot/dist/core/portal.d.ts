export interface PortalOptions {
    workspaceId: string;
    apiKey: string;
    zone: "LA" | "EU";
}
export declare class Portal {
    private readonly DEFAULT_MCP_URL;
    private workspaceId;
    private apiKey?;
    private mcpUrl;
    private http;
    constructor(options: PortalOptions);
    addPortal(params: {
        name: string;
        url?: string;
        title?: string;
        subtitle?: string;
        logo?: string;
        logodark?: string;
        access?: "direct" | "form";
        disabled?: boolean;
        brandOff?: boolean;
        zone: "LA" | "EU";
    }): Promise<{
        id: string;
        url: string;
    }>;
    updatePortal(params: {
        id: string;
        name?: string;
        url?: string;
        title?: string;
        subtitle?: string;
        logo?: string;
        logodark?: string;
        access?: "direct" | "form";
        disabled?: boolean;
        brandOff?: boolean;
        zone?: string;
    }): Promise<void>;
    getPortal(id: string): Promise<{
        success: boolean;
        portal: any;
    }>;
    getExistsPortal(): Promise<{
        success: boolean;
        portal: any;
    }>;
    deletePortal(id: string): Promise<{
        success: boolean;
        message: string;
    }>;
    addLinkToPortal(params: {
        portalId: string;
        value: string;
        url?: string;
    }): Promise<void>;
    addAgentToPortal(params: {
        portalId: string;
        id: string;
    }): Promise<void>;
    clearLinks(portalId: string): Promise<void>;
}
